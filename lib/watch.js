"use strict";

var when = require('when'),
    watcher = require('watch'),
    nconf = require('nconf'),
    common = require('./common');


// Watch all files for changes and rebuild everything when files
// updated/removed/added
module.exports = function watch(cb){
    var d = when.defer();

    function filterAutogen(filename, stat){
        return nconf.get('AUTOGENERATED_FILES').some(function(i){
            return filename.indexOf(i) !== -1;
        });
    }

    watcher.createMonitor(nconf.get('WATCH_PATH'), {'filter': filterAutogen}, function(monitor){
        monitor.on("created", function(f, stat){
            if(cb){
                cb.apply(this, ["created", f, stat]);
            }
        });

        monitor.on("changed", function (f, curr, prev) {
            cb.apply(this, ["changed", f, curr, prev]);
        });
        monitor.on("removed", function (f, stat) {
            cb.apply(this, ["removed", f, stat]);
        });
        common.success('<= Watching `'+nconf.get('WATCH_PATH')+'` for file changes');
        d.resolve(true);
    });
    return d.promise;
};